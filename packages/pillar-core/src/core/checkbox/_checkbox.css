.checkbox--label {
  font-size: 0.875em;
  color: inherit;
}

.checkbox-container {
  width: fit-content;
  color: var(--text-8);
  display: flex;
  gap: var(--space-xs);
  align-items: center;

  /*
    These properties serve as fallbacks. If the corresponding utility functions are
    unavailable, these properties take priority. However, if specific props related to
    avatars are provided, they will override these properties.
  */
  font-size: var(--checkbox-size, 1rem);

  &:focus-within {
    outline: 2px dashed var(--color-shared-10, var(--primary-10));
    outline-offset: 2px;
  }

  &:has(:disabled) {
    cursor: not-allowed;
  }

  &:hover > .checkbox {
    box-shadow: 0 0 0 0.125em var(--color-shared-7, var(--primary-7));
  }
}

.checkbox--element {
  &:checked:disabled + .checkbox {
    color: var(--surface-5);
  }
  &[aria-checked='false'] + .checkbox svg {
    display: none;
  }
  &:checked + .checkbox,
  &:indeterminate + .checkbox {
    background-color: var(--color-shared-9, none);
    color: var(--color-shared-1); /* Responsible For The Color Of The Check Icon stroke  white in checked state */
  }

  &:disabled + .checkbox {
    box-shadow: none;
    border-color: var(--surface-10);
    background-color: var(--surface-10);
    color: transparent; /* Responsible For The Color Of The Check Icon stroke  transparent in disabled state */
  }
  &:disabled ~ * {
    color: var(--surface-10);
  }
}

.checkbox {
  --flex: inline-flex;
  width: 1.25em;
  height: 1.25em;
  border: 1px solid var(--opacity-6);
  border-radius: 0.25em;
  color: transparent; /* Responsible For The Color Of The Check Icon stroke Default to transparent */
}

.checkbox--check {
  stroke: currentColor;
}

@media (forced-colors: active) {
  .checkbox:has(:disabled) {
    color: GrayText;

    /* & .checkbox--label {
      color: GrayText;
    } */

    & .checkbox {
      background-color: GrayText;
      border-color: GrayText;
    }
  }
}
