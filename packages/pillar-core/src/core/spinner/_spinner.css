.sp- {
  position: relative;
  flex: none;
  width: 1.25em;
  height: 1.25em;
  box-sizing: content-box;
  /*
    These properties serve as fallbacks. If the corresponding utility functions are
    unavailable, these properties take priority. However, if specific props related to
    avatars are provided, they will override these properties.
  */
  font-size: var(--spinner-size, var(--F5));

  /* &:is(::before, ::after) { */
  &::before,
  &::after {
    --Sbc: var(--c10);
    content: '';
    position: absolute;
    inset: 0;
    border: var(--Sb) solid var(--B4);
    border-top-color: var(--Sbc);
    border-left-color: var(--Sbc);
    border-radius: 50%;
    transform: rotate(-45deg);
    animation: spinner-move 1s infinite linear;
  }

  &::after {
    animation-timing-function: linear;
  }
}

.sp-1 {
  --Sb: 0.1em;
}
.sp-2 {
  --Sb: 0.15em;
}
.sp-3 {
  --Sb: 0.2em;
}
.sp-4 {
  --Sb: 0.3em;
}
.sp-5 {
  --Sb: 0.4em;
}
.sp-5 {
  --Sb: 0.5em;
}

.sp-invert {
  filter: invert(70%);
}

@keyframes spinner-move {
  to {
    transform: rotate(360deg);
  }
}

@media (forced-colors: active) {
  .sp-::before,
  .sp-::after {
    --Sbc: GrayText;
  }
}
